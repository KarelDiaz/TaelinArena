import TaelinArena.Game
import TaelinArena.Constants

enum
| DR_STRANGE_IDLE
| DR_STRANGE_MYSTIC_BEAM
| DR_STRANGE_TIME_STONE_POWER
| DR_STRANGE_PORTAL
| DR_STRANGE_CHRONOSTASIS

drstrange_fun(self: Thing) : Thing
  let self = self <= thing(mov = 4)

  case self |thing switch self.act

  |DR_STRANGE_IDLE
    if is_walking(self)
    then animate(self, 1, DR_STRANGE_WALK_000, 4, 16)
    else animate(self, 1, DR_STRANGE_IDLE_000, 5, 15)

  // Left 
  |DR_STRANGE_MYSTIC_BEAM
    let self = animate(self, 0, DR_STRANGE_MYSTIC_BEAM_CAST_000, 10, 30)
    let portal = new_thing <= thing(fun=drstrange_mystic_beam_fun, sid = self.sid, dir=self.dir)
    let self = spawn(self, 16, [move(portal, at_dist(self, 100))])
    self

  // Middle
  |DR_STRANGE_TIME_STONE_POWER
    let self = animate(self, 0, DR_STRANGE_TIME_STONE_POWER_CAST_000, 9, 18)
    let portal = new_thing <= thing(fun=drstrange_time_stone_power_fun, sid = self.sid)
    let self = spawn(self, 11, [move(portal, at_max_dist(self, 150))])
    self

  // Right
  |DR_STRANGE_PORTAL
    let self = animate(self, 0, DR_STRANGE_PORTAL_CAST_000, 6, 24)
    let portal = new_thing <= thing(fun = drstrange_portal_fun, sid = self.sid)
    let self = spawn(self, 10, [move(portal, at_max_dist(self, 150))])
    self

  // Q
  |DR_STRANGE_CHRONOSTASIS
    let self = animate(self, 0, DR_STRANGE_CHRONOSTASIS_CAST_000, 10, 30)
    let pos_p0 = at_dist(self, 70)
    let pos_p1 = at_dist(self, -120) //at_max_dist(self, 200)

    let portal_0 =
    case pos_p1 |v3
    let portal_0 = new_thing <= thing(
      fun=drstrange_chronostasis_p0_fun, 
      sid=self.sid,
      dir=self.dir,
      box=nbox,
      stt=insert(_ POS_X_KEY, pos_p1.x, self.stt)
      )
    case portal_0 |thing
    set_thing_stt(portal_0, insert(_ POS_Y_KEY, pos_p1.y, portal_0.stt))

    let portal_1 = 
    case pos_p0 |v3
    let portal_1 = new_thing <= thing(
      fun=drstrange_chronostasis_p1_fun, 
      sid=self.sid,
      dir=self.dir,
      box=nbox,
      stt=insert(_ POS_X_KEY, pos_p0.x, self.stt))
    case portal_1 |thing
    set_thing_stt(portal_1, insert(_ POS_Y_KEY, pos_p0.y, portal_1.stt))

    let self = spawn(self, 20, [move(portal_0, pos_p0)])
    let self = spawn(self, 21, [move(portal_1, pos_p1)])
    self

  else animate(self, 1, DR_STRANGE_IDLE_000, 5, 15)

drstrange_mystic_beam_fun(self: Thing) : Thing 
  animate_die(self, 0, DR_STRANGE_MYSTIC_BEAM_EFFECT_000, 9, 18)

drstrange_portal_fun(self: Thing) : Thing 
  animate_die(self, 0, DR_STRANGE_PORTAL_EFFECT_000, 31, 31)

drstrange_time_stone_power_fun(self: Thing) : Thing 
  animate_die(self, 0, DR_STRANGE_TIME_STONE_POWER_EFFECT_000, 29, 58)

// Portal to p1
drstrange_chronostasis_p0_fun(self: Thing) : Thing
  let self = animate(self, 0, DR_STRANGE_CHRONOSTASIS_EFFECT_000, 26, 78)
  case self |thing
  if self.tik === 51
  then self <= thing(die=true)
  else
    let p1_pos = get_stt_value_v3(self)
    let telep = [hit([teleport(p1_pos, 0)], self.pos, self.dir, cbox(25))]
    let self = cast(self, 26, telep)
    let self = cast(self, 50, telep)
    let self = cast(self, 70, telep)
    self

// Portal to p0
drstrange_chronostasis_p1_fun(self: Thing) : Thing
  let self = animate(self, 0, DR_STRANGE_CHRONOSTASIS_EFFECT_000, 26, 78)
  case self |thing
  if self.tik === 51
  then self <= thing(die=true)
  else
    let p0_pos = get_stt_value_v3(self)
    let telep = [hit([teleport(p0_pos, 0)], self.pos, self.dir, cbox(25))]
    let self = cast(self, 15, telep)
    let self = cast(self, 50, telep)
    self