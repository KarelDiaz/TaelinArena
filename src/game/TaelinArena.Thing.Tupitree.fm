import TaelinArena.Game
import TaelinArena.Thing.Tupitree.Effects

enum
| TUPITREE_IDLE
| TUPITREE_VINE_WHIP
| TUPITREE_POINTED_ROOT
| TUPITREE_ENTANGLING
| TUPITREE_NATURES_REVENGE
| TUPITREE_BLOCK
| TUPITREE_TAUNT

tupitree_fun(self: Thing) : Thing
  let self = self <= thing(mov = 3)

  case self |thing switch self.act

  |TUPITREE_IDLE
    case self.wlk
    | true  => animate(self, 1, TUPITREE_WALK_000, 6, 12)
    | false => animate(self, 1, TUPITREE_IDLE_000, 6, 12)

  // Left 
  |TUPITREE_VINE_WHIP
    animate(self, 0, TUPITREE_VINE_WHIP_000, 25, 30)

  // Middle
  |TUPITREE_POINTED_ROOT
    animate(self, 0, TUPITREE_POINTED_ROOT_000, 14, 18)

  // Right
  // TODO: calculate the maximun distance to spawn. Only spawn if hits an enemy in the area
  |TUPITREE_ENTANGLING
    let self = animate(self, 0, TUPITREE_ENTANGLING_ANIM_000, 18, 36)
    let self = spawn(self, 18, self.trg, new_thing <= thing(fun=tupitree_entangling_fun))
    self 

  // Space
  |TUPITREE_NATURES_REVENGE
    let self = animate(self, 0, TUPITREE_NATURE_REVENGE_ANIM_000, 28, 28)
    let root = new_thing <= thing(fun=tupitree_natures_revenge_fun)
    let self = spawn(self, 24, self.pos, root)
    self
   
  // Space
  |TUPITREE_BLOCK
    let self = animate(self, 0, TUPITREE_BLOCK_000, 13, 26)
    let self = hit(self, 16, outward_hit(60, 0, 6)) 
    self

  // E
  |TUPITREE_TAUNT
    animate(self, 0, TUPITREE_TAUNT_000, 12, 26)

  else self
