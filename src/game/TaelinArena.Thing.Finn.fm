import TaelinArena.Game

enum
| FINN_IDLE
| FINN_TRIPLE_TAKE
| FINN_BMO_S_FLASH
| FINN_BOW
| FINN_JAKES_FURY
| FINN_TAUNT
| FINN_EVADE

finn_fun(self: Thing) : Thing
  let self = self <= thing(mov = 5)
  let self = suffers(self)

  case self |thing switch self.act

  |FINN_IDLE
    if is_walking(self)
    then animate(self, 1, FINN_WALK_CYCLE_000, 8, 16)
    else animate(self, 1, FINN_IDLE_000, 5, 10)

  // Left 
  |FINN_TRIPLE_TAKE
    let self = animate(self, 1, FINN_TRIPLE_TAKE_000, 17, 34)
    let attack = new_thing <= thing(fun=finn_triple_take_effect, dir=targ_dir(self))
    let self = spawn(self, 0, [move(attack, at_max_dist(self, 35))])
    let self = spawn(self, 10, [move(attack, at_max_dist(self, 35))])
    let self = spawn(self, 30, [move(attack, at_max_dist(self, 35))])
    self 

  // Middle
  |FINN_BMO_S_FLASH
    animate(self, 0, FINN_BMO_S_FLASH_000, 13, 26)

  // Right
  |FINN_BOW
    let self = animate(self, 0, FINN_BOW_CAST_ANIMATION_000, 7, 14)
    let arrow = new_thing <= thing(fun=finn_bow_effect)
    let self = spawn(self, 12, [move(arrow, self.trg)])
    self

  // Space
  |FINN_JAKES_FURY
    animate(self, 1, FINN_JAKE_S_FURY_000, 26, 52)

  | FINN_TAUNT
    animate(self, 0, FINN_TAUNT_000, 17, 34)

  | FINN_EVADE
    let self = animate(self, 1, FINN_EVADE_000, 6, 12)
    let self = dash(self, 4, 0, 12)
    self

  else self

finn_bow_effect(self: Thing) : Thing
  let self = animate_die(self, 0, FINN_BOW_PROJECTILE_000, 0, 2)
  self

finn_triple_take_effect(self: Thing) : Thing 
  case self |thing
  let self = animate_die(self, 0, FINN_TRIPLE_TAKE_AUX_000, 1, 2)
  let self = self <= thing(box = nbox)
  let effs = [damage(2)]
  let hits = [hit(effs, self.pos, self.dir, cbox(20))]
  let self = cast(self, 0, hits)
  self
  
finn_triple_take_effect(self: Thing) : Thing 
  case self |thing
  let self = animate_die(self, 0, FINN_TRIPLE_TAKE_AUX_000, 1, 2)
  let self = self <= thing(box = nbox)
  let effs = [damage(2)]
  let hits = [hit(effs, self.pos, self.dir, cbox(20))]
  let self = cast(self, 0, hits)
  self
  
